import { StringComparisonOperator, DateComparisonOperator } from "../../../../types/common";
declare const _default: (req: any, res: any) => Promise<void>;
/**
 * @oas [get] /product-tags
 * operationId: "GetProductTags"
 * summary: "List Product Tags"
 * description: "Retrieve a list of Product Tags."
 * x-authenticated: true
 * parameters:
 *   - (query) limit {string} The number of tags to return.
 *   - (query) offset {string} The offset of tags to return.
 *   - (query) value {string} The value of tags to return.
 *   - (query) id {string} The id of tags to return.
 *   - (query) created_at {DateComparisonOperator} Date comparison for when resulting tas was created, i.e. less than, greater than etc.
 *   - (query) updated_at {DateComparisonOperator} Date comparison for when resulting tas was updated, i.e. less than, greater than etc.
 * tags:
 *   - Product Tag
 * responses:
 *  "200":
 *    description: OK
 *    content:
 *      application/json:
 *        schema:
 *          properties:
 *            tags:
 *              $ref: "#/components/schemas/product_tag"
 */
export default _default;
export declare class AdminGetProductTagsPaginationParams {
    limit: number;
    offset: number;
}
export declare class AdminGetProductTagsParams extends AdminGetProductTagsPaginationParams {
    id?: string | string[] | StringComparisonOperator;
    value?: string | string[] | StringComparisonOperator;
    created_at?: DateComparisonOperator;
    updated_at?: DateComparisonOperator;
    order?: string;
}
