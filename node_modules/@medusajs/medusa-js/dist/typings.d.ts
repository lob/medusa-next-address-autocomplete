import { AdminCreateUserRequest, AdminPostInvitesReq, AdminUpdateUserRequest } from "@medusajs/medusa";
export interface HTTPResponse {
    status: number;
    statusText: string;
    headers: Record<string, string> & {
        "set-cookie"?: string[];
    };
    config: any;
    request?: any;
}
export declare type Response<T> = T & {
    response: HTTPResponse;
};
export declare type ResponsePromise<T = any> = Promise<Response<T>>;
declare type NoUndefined<T> = T extends undefined ? never : T;
declare type CreateUserRolesEnum = NoUndefined<AdminCreateUserRequest["role"]>;
export declare type CreateUserRoles = `${CreateUserRolesEnum}`;
export declare type AdminCreateUserPayload = Omit<AdminCreateUserRequest, "role"> | {
    role?: CreateUserRoles;
};
declare type UpdateUserRolesEnum = NoUndefined<AdminUpdateUserRequest["role"]>;
export declare type UpdateUserRoles = `${UpdateUserRolesEnum}`;
export declare type AdminUpdateUserPayload = Omit<AdminUpdateUserRequest, "role"> & {
    role?: UpdateUserRoles;
};
export declare type InviteUserRolesEnum = `${AdminPostInvitesReq["role"]}`;
export declare type AdminPostInvitesPayload = Omit<AdminPostInvitesReq, "role"> & {
    role: InviteUserRolesEnum;
};
export {};
