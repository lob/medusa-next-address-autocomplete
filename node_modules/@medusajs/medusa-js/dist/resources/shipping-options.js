"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var qs_1 = __importDefault(require("qs"));
var base_1 = __importDefault(require("./base"));
var ShippingOptionsResource = /** @class */ (function (_super) {
    __extends(ShippingOptionsResource, _super);
    function ShippingOptionsResource() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @description Lists shiping options available for a cart
     * @param {string} cart_id
     * @return {ResponsePromise<StoreShippingOptionsListRes>}
     */
    ShippingOptionsResource.prototype.listCartOptions = function (cart_id) {
        var path = "/store/shipping-options/" + cart_id;
        return this.client.request("GET", path);
    };
    /**
     * @description Lists shiping options available
     * @param {StoreGetShippingOptionsParamsObject} query
     * @return {ResponsePromise<StoreShippingOptionsListRes>}
     */
    ShippingOptionsResource.prototype.list = function (query) {
        var path = "/store/shipping-options";
        if (query) {
            var queryString = qs_1.default.stringify(query);
            path = "/store/shipping-options?" + queryString;
        }
        return this.client.request("GET", path);
    };
    return ShippingOptionsResource;
}(base_1.default));
exports.default = ShippingOptionsResource;
//# sourceMappingURL=shipping-options.js.map